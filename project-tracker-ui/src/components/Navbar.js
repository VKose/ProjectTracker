import { useState } from 'react'; 
import { Link, useNavigate, useLocation } from 'react-router-dom';
import { getUserFromToken } from '../utils/auth'; 
import './Navbar.css'; 

function Navbar() {
  const [menuOpen, setMenuOpen] = useState(false);  //  Mobil menÃ¼ aÃ§Ä±k mÄ±?
  const navigate = useNavigate();                   //  Sayfa yÃ¶nlendirme
  const location = useLocation();                   //  Mevcut URL bilgisini al
  const user = getUserFromToken();                  //  GiriÅŸ yapan kullanÄ±cÄ±yÄ± al

  //  Ã‡Ä±kÄ±ÅŸ iÅŸlemi
  const handleLogout = () => {
    localStorage.removeItem('token'); // Token'Ä± temizle
    navigate('/login');               // GiriÅŸ sayfasÄ±na yÃ¶nlendir
  };

  //  Mobil menÃ¼ aÃ§/kapa
  const toggleMenu = () => setMenuOpen(!menuOpen);

  return (
    <nav className="navbar">
      {/* Sayfa baÅŸlÄ±ÄŸÄ± */}
      <div className="nav-logo">ğŸ“‹ Ã‡oklu MÃ¼ÅŸterili Proje ve GÃ¶rev Takip Sistemi</div>

      {/* Hamburger menÃ¼ butonu (mobil gÃ¶rÃ¼nÃ¼mde aktif) */}
      <button className="hamburger" onClick={toggleMenu}>â˜°</button>

      {/* OrtalanmÄ±ÅŸ menÃ¼ baÄŸlantÄ±larÄ± */}
      {user && ( // Sadece kullanÄ±cÄ± varsa menÃ¼ gÃ¶ster
        <div className={`nav-center ${menuOpen ? 'open' : ''}`}>
          <div className="nav-links">
            {/*  TÃ¼m roller iÃ§in geÃ§erli menÃ¼ler */}
            <Link
              to="/projects"
              className={location.pathname === '/projects' ? 'active' : ''}
            >
              Projeler
            </Link>
            <Link
              to="/todos"
              className={location.pathname === '/todos' ? 'active' : ''}
            >
              GÃ¶revler
            </Link>

            {/*  Admin ve Manager'a Ã¶zel menÃ¼ler */}
            {(user?.role === 'Admin' || user?.role === 'Manager') && (
              <>
                <Link
                  to="/add-project"
                  className={location.pathname === '/add-project' ? 'active' : ''}
                >
                  Proje Ekle
                </Link>
                <Link
                  to="/add-todo"
                  className={location.pathname === '/add-todo' ? 'active' : ''}
                >
                  GÃ¶rev Ekle
                </Link>
                <Link
                  to="/dashboard"
                  className={location.pathname === '/dashboard' ? 'active' : ''}
                >
                  Dashboard
                </Link>
                <Link
                  to="/customers"
                  className={location.pathname === '/customers' ? 'active' : ''}
                >
                  MÃ¼ÅŸteriler
                </Link>
              </>
            )}

            {/*  Sadece Admin'e Ã¶zel kullanÄ±cÄ± yÃ¶netimi */}
            {user?.role === 'Admin' && (
              <Link
                to="/users"
                className={location.pathname === '/users' ? 'active' : ''}
              >
                KullanÄ±cÄ±lar
              </Link>
            )}

            {/*  Profil sayfasÄ± - tÃ¼m roller iÃ§in aÃ§Ä±k */}
            <Link
              to="/profile"
              className={location.pathname === '/profile' ? 'active' : ''}
            >
              Profil
            </Link>
          </div>
        </div>
      )}

      {/*  KullanÄ±cÄ± bilgisi ve Ã§Ä±kÄ±ÅŸ butonu */}
      {user && (
        <div className="nav-right">
          <span>ğŸ’» {user.name || user.email}</span>         {/*  KullanÄ±cÄ± ismi veya e-posta */}
          <button onClick={handleLogout}>Ã‡Ä±kÄ±ÅŸ</button>     {/*  Ã‡Ä±kÄ±ÅŸ yap */}
        </div>
      )}
    </nav>
  );
}

export default Navbar;
